c
 Link.find_by(short_link: self.short_link)
DEFAULT_LENGTH
c
DEFAULT_LENGTH
c
DEFAULT_LENGTH
c
DEFAULT_LENGTH
 SecureRandom.urlsafe_base64 DEFAULT_LENGTH
c
l1.host
l1.path
l1 = URI.parse("www.google.com")
require 'uri'
l1.path
l1.methods
l1.host
l1 = URI.parse("www.google.com")
l = URI.parse(@link.long_link)
l = URL.parse(@link.long_link)
l = URL.parse @link.long_link
l = @link.long_link
@link.redirection_url
c
l =  @link.long_link
u.to_s
u.host
u
y
u.host
u.to_s
u
u.scheme = "http"
u = URI.parse @link.long_link
url.scheme = "http"
URI.parse @link.long_link
@link.long_link
@link.long_url
c
redirect_to 'http://www.google.com'
c
@link.redirection_url
c
@link.long_link=  "http://"+ @link.long_link
@link.reload
@link.long_link=  "http://"+ @link.long_link
@link.long_link=  "http:// "+ @link.long_link
@link.long_link
c
@link
c
@link.valid?
@link.valud
@link
c
raise
@link.valid?
@link.valid
@link
c
build_link_parms
@linkbuild_link_parms
@link
c
params[:link][:long_link]
params[:link]
params.[:link]
params.require(:link)
params.require(:link).permit(:long_link)
c
params
c
@link
